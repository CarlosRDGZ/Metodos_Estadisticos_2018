respuesta <- c(tratamiento1, tratamiento2)
grupos <- rep(c(1,2), each = n)
t.test1  <- t.test(respuesta~grupos, na.rm = T, mu = 0, alternative = "two.sided", paired = T, conf.level = 0.10)
t.test1
# Supuesto Normalidad
qqnorm(diferencia)
# Ejercicio 3
tratamiento1 <- c(22, 28, 26, 18, 20, 19, 15, 20, 23, 21, 19, 20, 19, 18, 21)
tratamiento2 <- c(26, 30, 24, 22, 21, 21, 18, 19, 21, 19, 18, 19, 17, 18, 22)
diferencia <- tratamiento1 - tratamiento2
valor.esperado   <- 0
# promedio de la diferencia entre los tratamientos
promedio <- mean(diferencia)
promedio
n <- length(diferencia)
n
# La varianza de la diferencia entre los tratamientos
varianza <- ( sum(diferencia ^ 2) - (n * promedio ^ 2) ) / (n - 1)
varianza
# error estÃ¡ndar de la media de la diferencia
error.std <- sqrt(varianza / n)
error.std
# tCal
tCal <- (promedio - valor.esperado) / error.std
tCal
# tTablas
tTablas <- qt(0.1/2, df = n - 1, lower.tail = F)
tTablas
# Desicion de Hipotesis
abs(tCal) > tTablas
# t test
# Muestras
respuesta <- c(tratamiento1, tratamiento2)
grupos <- rep(c(1,2), each = n)
t.test1  <- t.test(respuesta~grupos, na.rm = T, mu = 0, alternative = "two.sided", paired = T, conf.level = 0.10)
t.test1
# Supuesto Normalidad
qqnorm(diferencia)
qqline(diferencia)
shapiro.test(diferencia)
# Ejercicio 3
LIA <- c(22, 28, 26, 18, 20, 19, 15, 20, 23, 21, 19, 20, 19, 18, 21)
LFA <- c(26, 30, 24, 22, 21, 21, 18, 19, 21, 19, 18, 19, 17, 18, 22)
# Ejerccio 2
tratamiento1 <- c(4, 4.5, 5, 3, 4.5, 5, 6, 4, 5, 6)
tratamiento2 <- c(3, 5, 4, 3.3, 4, 4, 5, 4, 3, 5)
diferencia <- tratamiento1 - tratamiento2
valor.esperado   <- 0
# promedio de la diferencia entre los tratamientos
promedio <- mean(diferencia)
promedio
n <- length(diferencia)
n
# La varianza de la diferencia entre los tratamientos
varianza <- ( sum(diferencia ^ 2) - (n * promedio ^ 2) ) / (n - 1)
varianza
# error estÃ¡ndar de la media de la diferencia
error.std <- sqrt(varianza / n)
error.std
# tCal
tCal <- (promedio - valor.esperado) / error.std
tCal
# tTablas
tTablas <- qt(0.1/2, df = n - 1, lower.tail = F)
tTablas
# Desicion de Hipotesis
abs(tCal) > tTablas
# t test
# Muestras
respuesta <- c(tratamiento1, tratamiento2)
grupos <- rep(c(1,2), each = n)
t.test1  <- t.test(respuesta~grupos, na.rm = T, mu = 0, alternative = "two.sided", paired = T, conf.level = 0.10)
t.test1
# Supuesto Normalidad
qqnorm(diferencia)
qqline(diferencia)
shapiro.test(diferencia)
# Ejercicio 3
LIA <- c(22, 28, 26, 18, 20, 19, 15, 20, 23, 21, 19, 20, 19, 18, 21)
LFA <- c(26, 30, 24, 22, 21, 21, 18, 19, 21, 19, 18, 19, 17, 18, 22)
diferencia <- tratamiento1 - tratamiento2
valor.esperado   <- 0
# promedio de la diferencia entre los tratamientos
promedio <- mean(diferencia)
promedio
n <- length(diferencia)
n
# La varianza de la diferencia entre los tratamientos
varianza <- ( sum(diferencia ^ 2) - (n * promedio ^ 2) ) / (n - 1)
varianza
# error estÃ¡ndar de la media de la diferencia
error.std <- sqrt(varianza / n)
error.std
# tCal
tCal <- (promedio - valor.esperado) / error.std
tCal
# tTablas
tTablas <- qt(0.1/2, df = n - 1, lower.tail = F)
tTablas
# Desicion de Hipotesis
abs(tCal) > tTablas
# t test
# Muestras
respuesta <- c(tratamiento1, tratamiento2)
grupos <- rep(c(1,2), each = n)
t.test1  <- t.test(respuesta~grupos, na.rm = T, mu = 0, alternative = "two.sided", paired = T, conf.level = 0.10)
t.test1
# Supuesto Normalidad
qqnorm(diferencia)
qqline(diferencia)
shapiro.test(diferencia)
# Ejercicio 3
LIA <- c(22, 28, 26, 18, 20, 19, 15, 20, 23, 21, 19, 20, 19, 18, 21)
LFA <- c(26, 30, 24, 22, 21, 21, 18, 19, 21, 19, 18, 19, 17, 18, 22)
diferencia <- LIA - LFA
valor.esperado   <- 0
# promedio de la diferencia entre los tratamientos
promedio <- mean(diferencia)
promedio
n <- length(diferencia)
n
# La varianza de la diferencia entre los tratamientos
varianza <- ( sum(diferencia ^ 2) - (n * promedio ^ 2) ) / (n - 1)
varianza
# error estÃ¡ndar de la media de la diferencia
error.std <- sqrt(varianza / n)
error.std
# tCal
tCal <- (promedio - valor.esperado) / error.std
tCal
# tTablas
tTablas <- qt(0.1/2, df = n - 1, lower.tail = F)
tTablas
# Desicion de Hipotesis
abs(tCal) > tTablas
# t test
# Muestras
respuesta <- c(tratamiento1, tratamiento2)
# Ejercicio 3
LIA <- c(22, 28, 26, 18, 20, 19, 15, 20, 23, 21, 19, 20, 19, 18, 21)
LFA <- c(26, 30, 24, 22, 21, 21, 18, 19, 21, 19, 18, 19, 17, 18, 22)
diferencia <- LIA - LFA
valor.esperado   <- 0
# promedio de la diferencia entre los tratamientos
promedio <- mean(diferencia)
promedio
n <- length(diferencia)
n
# La varianza de la diferencia entre los tratamientos
varianza <- ( sum(diferencia ^ 2) - (n * promedio ^ 2) ) / (n - 1)
varianza
# error estÃ¡ndar de la media de la diferencia
error.std <- sqrt(varianza / n)
error.std
# tCal
tCal <- (promedio - valor.esperado) / error.std
tCal
# tTablas
tTablas <- qt(0.1/2, df = n - 1, lower.tail = F)
tTablas
# Desicion de Hipotesis
abs(tCal) > tTablas
# t test
# Muestras
respuesta <- c(LIA, LFA)
grupos <- rep(c(1,2), each = n)
t.test1  <- t.test(respuesta~grupos, na.rm = T, mu = 0, alternative = "two.sided", paired = T, conf.level = 0.10)
t.test1
# Supuesto Normalidad
qqnorm(diferencia)
qqline(diferencia)
shapiro.test(diferencia)
# Ejercicio 3
LIA <- c(22, 28, 26, 18, 20, 19, 15, 20, 23, 21, 19, 20, 19, 18, 21)
LFA <- c(26, 30, 24, 22, 21, 21, 18, 19, 21, 19, 18, 19, 17, 18, 22)
diferencia <- LIA - LFA
valor.esperado   <- 0
# promedio de la diferencia entre los tratamientos
promedio <- mean(diferencia)
promedio
n <- length(diferencia)
n
# La varianza de la diferencia entre los tratamientos
varianza <- ( sum(diferencia ^ 2) - (n * promedio ^ 2) ) / (n - 1)
varianza
# error estÃ¡ndar de la media de la diferencia
error.std <- sqrt(varianza / n)
error.std
# tCal
tCal <- (promedio - valor.esperado) / error.std
tCal
# tTablas
tTablas <- qt(0.1/2, df = n - 1, lower.tail = F)
tTablas
# Desicion de Hipotesis
abs(tCal) > tTablas
# t test
# Muestras
respuesta <- c(LIA, LFA)
grupos <- rep(c(1,2), each = n)
t.test1  <- t.test(respuesta~grupos, na.rm = T, mu = 0, alternative = "two.sided", paired = T, conf.level = 0.10)
t.test1
# Supuesto Normalidad
qqnorm(diferencia)
qqline(diferencia)
shapiro.test(diferencia)
# Ejercicio 3
LIA <- c(88, 80, 90, 88, 92, 89, 98, 94, 91, 95, 90, 94)
LFA <- c(70, 77, 85, 84, 80, 88, 94, 90, 89, 99, 93, 93)
diferencia <- LIA - LFA
valor.esperado   <- 0
# promedio de la diferencia entre los tratamientos
promedio <- mean(diferencia)
promedio
n <- length(diferencia)
n
# La varianza de la diferencia entre los tratamientos
varianza <- ( sum(diferencia ^ 2) - (n * promedio ^ 2) ) / (n - 1)
varianza
# error estÃ¡ndar de la media de la diferencia
error.std <- sqrt(varianza / n)
error.std
# tCal
tCal <- (promedio - valor.esperado) / error.std
tCal
# tTablas
tTablas <- qt(0.01/2, df = n - 1, lower.tail = F)
tTablas
# Desicion de Hipotesis
abs(tCal) > tTablas
# t test
# Muestras
respuesta <- c(LIA, LFA)
grupos <- rep(c(1,2), each = n)
t.test1  <- t.test(respuesta~grupos, na.rm = T, mu = 0, alternative = "two.sided", paired = T, conf.level = 0.10)
t.test1
# Supuesto Normalidad
qqnorm(diferencia)
qqline(diferencia)
shapiro.test(diferencia)
# Ejercicio 3
LIA <- c(88, 80, 90, 88, 92, 89, 98, 94, 91, 95, 90, 94)
LFA <- c(70, 77, 85, 84, 80, 88, 94, 90, 89, 99, 93, 93)
diferencia <- LIA - LFA
valor.esperado   <- 0
# promedio de la diferencia entre los tratamientos
promedio <- mean(diferencia)
promedio
n <- length(diferencia)
n
# La varianza de la diferencia entre los tratamientos
varianza <- ( sum(diferencia ^ 2) - (n * promedio ^ 2) ) / (n - 1)
varianza
# error estÃ¡ndar de la media de la diferencia
error.std <- sqrt(varianza / n)
error.std
# tCal
tCal <- (promedio - valor.esperado) / error.std
tCal
# tTablas
tTablas <- qt(0.01/2, df = n - 1, lower.tail = F)
tTablas
# Desicion de Hipotesis
abs(tCal) > tTablas
# t test
# Muestras
respuesta <- c(LIA, LFA)
grupos <- rep(c(1,2), each = n)
t.test1  <- t.test(respuesta~grupos, na.rm = T, mu = 0, alternative = "two.sided", paired = T, conf.level = 0.10)
t.test1
# Supuesto Normalidad
qqnorm(diferencia)
qqline(diferencia)
shapiro.test(diferencia)
install.packages("Agricolae")
install.packages("agricolae")
library(agricolae)
help("HSD.test")
linea1 <- c(452,379,412,320,350,390,378)
linea2 <- c(322,345,367,341,372,317,324)
linea3 <- c(298,312,280,310,235,304,320)
linea4 <- c(340,358,345,362,370,323,368)
lineas <- data.frame(linea1,linea2,linea3,linea4)
lineas
apply(lineas, 2, sum)
linea1 <- c(452,379,412,320,350,390,378)
linea2 <- c(322,345,367,341,372,317,324)
linea3 <- c(298,312,280,310,235,304,320)
linea4 <- c(340,358,345,362,370,323,368)
lineas <- data.frame(linea1,linea2,linea3,linea4)
apply(lineas, 2, sum)
apply(lineas, 2, mean)
nLineas <- as.factor(rep(c(1, 2, 3, 4), each = 7))
lineas <- data.frame(nLineas, linea=c(linea1,linea2,linea3,linea4))
modelo <- aov(linea ~ nLineas, data=lineas)
summary(modelo)
TukeyHSD(modelo)
plot(TukeyHSD(modelo), las=1, col="brown")
library(agricolae)
Prueba.HSD <- HSD.test(modelo, "nLineas", group=TRUE)
Prueba.HSD$groups
marca1 <- c(1.04,1.05,1.06,1.07,1.05)
marca2 <- c(1.10,1.11,1.09,1.07,1.08)
marca3 <- c(1.21,1.19,1.18,1.17,1.21)
marca1 <- c(1.04,1.05,1.06,1.07,1.05)
marca2 <- c(1.10,1.11,1.09,1.07,1.08)
marca3 <- c(1.21,1.19,1.18,1.17,1.21)
marcas <- data.frame(marca1,marca2,marca3)
apply(marcas, 2, sum)
apply(marcas, 2, mean)
nMarcas <- as.factor(rep(c(1, 2, 3, 4), each = 7))
marcas <- data.frame(nMarcas, marca=c(marca1,marca2,marca3))
modelo <- aov(marca ~ nMarcas, data=marcas)
marca1 <- c(1.04,1.05,1.06,1.07,1.05)
marca2 <- c(1.10,1.11,1.09,1.07,1.08)
marca3 <- c(1.21,1.19,1.18,1.17,1.21)
marcas <- data.frame(marca1,marca2,marca3)
apply(marcas, 2, sum)
apply(marcas, 2, mean)
nMarcas <- as.factor(rep(c(1, 2, 3), each = 5))
marcas <- data.frame(nMarcas, marca=c(marca1,marca2,marca3))
modelo <- aov(marca ~ nMarcas, data=marcas)
summary(modelo)
TukeyHSD(modelo)
plot(TukeyHSD(modelo), las=1, col="brown")
library(agricolae)
Prueba.HSD <- HSD.test(modelo, "nMarcas", group=TRUE)
Prueba.HSD$groups
operadorA <- c(45,43,41,42)
operadorB <- c(44,44,45,43)
operadorC <- c(40,44,45,46)
operadorD <- c(44,45,46,45)
operadores <- data.frame(operadorA,operadorB,operadorC,operadorD)
apply(operadores, 2, sum)
apply(operadores, 2, mean)
nOperadores <- as.factor(rep(c(1, 2, 3, 4), each = 4))
operadores <- data.frame(nOperadores, operador=c(operadorA,operadorB,operadorC,operadorD))
modelo <- aov(operador ~ nOperadores, data=operadores)
summary(modelo)
TukeyHSD(modelo)
plot(TukeyHSD(modelo), las=1, col="brown")
library(agricolae)
Prueba.HSD <- HSD.test(modelo, "nOperadores", group=TRUE)
Prueba.HSD$groups
marca1 <- c(1.04,1.05,1.06,1.07,1.05)
marca2 <- c(1.10,1.11,1.09,1.07,1.08)
marca3 <- c(1.21,1.19,1.18,1.17,1.21)
marcas <- data.frame(marca1,marca2,marca3)
apply(marcas, 2, sum)
apply(marcas, 2, mean)
nMarcas <- as.factor(rep(c(1, 2, 3), each = 5))
marcas <- data.frame(nMarcas, marca=c(marca1,marca2,marca3))
modelo <- aov(marca ~ nMarcas, data=marcas)
summary(modelo)
TukeyHSD(modelo)
plot(TukeyHSD(modelo), las=1, col="brown")
library(agricolae)
Prueba.HSD <- HSD.test(modelo, "nMarcas", group=TRUE)
Prueba.HSD$groups
qqnorm(modelo$residuals)
qqline(modelo$residuals)
shapiro.test(modelo$residuals)
qqnorm(modelo$residuals)
qqline(modelo$residuals)
shapiro.test(modelo$residuals)
qqnorm(modelo$residuals)
qqline(modelo$residuals)
linea1 <- c(452,379,412,320,350,390,378)
linea2 <- c(322,345,367,341,372,317,324)
linea3 <- c(298,312,280,310,235,304,320)
linea4 <- c(340,358,345,362,370,323,368)
lineas <- data.frame(linea1,linea2,linea3,linea4)
apply(lineas, 2, sum)
apply(lineas, 2, mean)
nLineas <- as.factor(rep(c(1, 2, 3, 4), each = 7))
lineas <- data.frame(nLineas, linea=c(linea1,linea2,linea3,linea4))
modelo <- aov(linea ~ nLineas, data=lineas)
summary(modelo)
TukeyHSD(modelo)
plot(TukeyHSD(modelo), las=1, col="brown")
library(agricolae)
Prueba.HSD <- HSD.test(modelo, "nLineas", group=TRUE)
Prueba.HSD$groups
qqnorm(modelo$residuals)
qqline(modelo$residuals)
shapiro.test(modelo$residuals)
marca1 <- c(1.04,1.05,1.06,1.07,1.05)
marca2 <- c(1.10,1.11,1.09,1.07,1.08)
marca3 <- c(1.21,1.19,1.18,1.17,1.21)
marcas <- data.frame(marca1,marca2,marca3)
apply(marcas, 2, sum)
apply(marcas, 2, mean)
nMarcas <- as.factor(rep(c(1, 2, 3), each = 5))
marcas <- data.frame(nMarcas, marca=c(marca1,marca2,marca3))
modelo <- aov(marca ~ nMarcas, data=marcas)
summary(modelo)
TukeyHSD(modelo)
plot(TukeyHSD(modelo), las=1, col="brown")
library(agricolae)
Prueba.HSD <- HSD.test(modelo, "nMarcas", group=TRUE)
Prueba.HSD$groups
qqnorm(modelo$residuals)
qqline(modelo$residuals)
shapiro.test(modelo$residuals)
operadorA <- c(45,43,41,42)
operadorB <- c(44,44,45,43)
operadorC <- c(40,44,45,46)
operadorD <- c(44,45,46,45)
operadores <- data.frame(operadorA,operadorB,operadorC,operadorD)
apply(operadores, 2, sum)
apply(operadores, 2, mean)
nOperadores <- as.factor(rep(c(1, 2, 3, 4), each = 4))
operadores <- data.frame(nOperadores, operador=c(operadorA,operadorB,operadorC,operadorD))
modelo <- aov(operador ~ nOperadores, data=operadores)
summary(modelo)
TukeyHSD(modelo)
plot(TukeyHSD(modelo), las=1, col="brown")
library(agricolae)
Prueba.HSD <- HSD.test(modelo, "nOperadores", group=TRUE)
Prueba.HSD$groups
qqnorm(modelo$residuals)
qqline(modelo$residuals)
shapiro.test(modelo$residuals)
marca1 <- c(1.04,1.05,1.06,1.07,1.05)
marca2 <- c(1.10,1.11,1.09,1.07,1.08)
marca3 <- c(1.21,1.19,1.18,1.17,1.21)
marcas <- data.frame(marca1,marca2,marca3)
apply(marcas, 2, sum)
apply(marcas, 2, mean)
nMarcas <- as.factor(rep(c(1, 2, 3), each = 5))
marcas <- data.frame(nMarcas, marca=c(marca1,marca2,marca3))
modelo <- aov(marca ~ nMarcas, data=marcas)
summary(modelo)
TukeyHSD(modelo)
plot(TukeyHSD(modelo), las=1, col="brown")
library(agricolae)
Prueba.HSD <- HSD.test(modelo, "nMarcas", group=TRUE)
Prueba.HSD$groups
qqnorm(modelo$residuals)
qqline(modelo$residuals)
shapiro.test(modelo$residuals)
solucion1 <- c(13,22,18)
solucion2 <- c(16,24,17)
solucion3 <- c(5,4,1)
soluciones <- data.frame(solucion1,solucion2,solucion3)
apply(soluciones, 2, sum)
apply(soluciones, 2, mean)
nSoluciones <- as.factor(rep(c(1, 2, 3), each = 5))
soluciones <- data.frame(nSoluciones, solucion=c(solucion1,solucion2,solucion3))
modelo <- aov(solucion ~ nSoluciones, data=soluciones)
solucion1 <- c(13,22,18)
solucion2 <- c(16,24,17)
solucion3 <- c(5,4,1)
soluciones <- data.frame(solucion1,solucion2,solucion3)
apply(soluciones, 2, sum)
apply(soluciones, 2, mean)
nSoluciones <- as.factor(rep(c(1, 2, 3), each = 3))
soluciones <- data.frame(nSoluciones, solucion=c(solucion1,solucion2,solucion3))
modelo <- aov(solucion ~ nSoluciones, data=soluciones)
summary(modelo)
TukeyHSD(modelo)
plot(TukeyHSD(modelo), las=1, col="brown")
library(agricolae)
Prueba.HSD <- HSD.test(modelo, "nSoluciones", group=TRUE)
Prueba.HSD$groups
qqnorm(modelo$residuals)
qqline(modelo$residuals)
shapiro.test(modelo$residuals)
linea1 <- c(452,379,412,320,350,390,378)
linea2 <- c(322,345,367,341,372,317,324)
linea3 <- c(298,312,280,310,235,304,320)
linea4 <- c(340,358,345,362,370,323,368)
lineas <- data.frame(linea1,linea2,linea3,linea4)
print("sumas", apply(lineas, 2, sum))
print("promedios", apply(lineas, 2, mean))
nLineas <- as.factor(rep(c(1, 2, 3, 4), each = 7))
lineas <- data.frame(nLineas, linea=c(linea1,linea2,linea3,linea4))
modelo <- aov(linea ~ nLineas, data=lineas)
print("Summary",summary(modelo))
print("TukeyHSD",TukeyHSD(modelo))
print(apply(lineas, 2, sum))
line1 <- c(452,379,412,320,350,390,378)
line2 <- c(322,345,367,341,372,317,324)
line3 <- c(298,312,280,310,235,304,320)
lines <- data.frame(line1,line2,linea3,line4)
line4 <- c(340,358,345,362,370,323,368)
apply(lines, 2, sum)
apply(lines, 2, mean)
nLines <- as.factor(rep(c(1, 2, 3, 4), each = 7))
lineas <- data.frame(nLines, linea=c(line1,line2,linea3,line4))
modelo <- aov(linea ~ nLines, data=lineas)
summary(modelo)
TukeyHSD(modelo)
line1 <- c(452,379,412,320,350,390,378)
line2 <- c(322,345,367,341,372,317,324)
line3 <- c(298,312,280,310,235,304,320)
line4 <- c(340,358,345,362,370,323,368)
lines <- data.frame(line1,line2,linea3,line4)
apply(lines, 2, sum)
apply(lines, 2, mean)
nLines <- as.factor(rep(c(1, 2, 3, 4), each = 7))
lineas <- data.frame(nLines, line=c(line1,line2,linea3,line4))
modelo <- aov(line ~ nLines, data=lineas)
summary(modelo)
TukeyHSD(modelo)
plot(TukeyHSD(modelo), las=1, col="brown")
library(agricolae)
Prueba.HSD <- HSD.test(modelo, "nLines", group=TRUE)
Prueba.HSD$groups
qqnorm(modelo$residuals)
qqline(modelo$residuals)
shapiro.test(modelo$residuals)
